*) Journey (i.e: Sahayatri.com):
    -> Service/Platform help user to buy ticket online for Long Distance Bus, Hiace, Cars travels.
    -> Problem:
        -> People in nepal have physically go to the shop and one some festival like: dashain & tihar people even have to wait in a line for hours to buy bus, Hiace tickets
        -> Also some people do phone calls to these Bus & Hiace owner and ask to seat and negotiate for the price and is not guarantee that they will going to get the exact same that they ask for.
        -> Another problem is that it is time consuming process just to buy the ticket and also don't have any reliable virtual process where they can buy authenticate ticket and pay online and no need to worry any other things.
    -> Solution:
        -> What we can do is we can create a platform which can help these people to easily buy the ticket online with just searching and finding the best seats that they want with the desired price.
        -> And after they buy the ticket they will get the virtual ticket for the further verification that might need to be done by the Bus Driver or owner of the bus when they need to.
        -> We can implement the machine learning algorithm for recommendation system where using reviews of the customer who experience the service can review and according to the those review we can recommend and rank the best vehicles at the top of search list. so, that customer can have the better experience.
    -> System Overall workflow:
        -> First merchant have to register into the platform with minimal charge with valid credentials and after that Admin will verify the requested registration and if Admin validate the information and approved the registration then merchant can add all the vehicle that they own.
        -> After that merchant can create a new Travel where they have to provide the departure place, destination place, departure time, departure date and all the required information.
        -> After that all those created Travel info will be listed on the User side with recommendation algorithm implement using ML algorithm, and User can search the vehicle listed on User site.
        -> After that User can Book the seats and do an online payment with desired payment gateway service and will get email or get the virtual ticket in QR format or another other possible options if available, which then Driver of that vehicle can verify the ticket physically on departure time of the bus.
    
*) Functional Requirement:
    -> User can be able to Register & logged into the system
    -> User can be able to Pick From & To Places to find the best possible Vehicle.
    -> User can View all the seats which are available and are already booked.
    -> User can book the seats with given price by paying through payment gateway service
    -> User can view all the reviews done for that specific Vehicle Service.
    -> User can review the specific Vehicle after they have take the service.
    -> Merchant can Register with given minimal charge and logged into the Merchant Site.
    -> Merchant can list all the available Vehicle with required details.
    -> Merchant can update the listed vehicles or remove it from the list.
    -> Admin can logged into the Admin Site.
    -> Admin can approved & Disapprove the merchant who are trying to register.
    -> Admin can do have control of any sort of Users, Merchants & Admin data as per their permissions.

*) Non Functional Requirement:
    -> Scalability
    -> Availability
    -> Consistency
    -> Security


*) Backend Framework for all MicroServices:
    1) Gateway : Express
    2) User:
        1> User Service: Express
        2> Vehicle Service: Django
        3> Booking Service: Express
        4> Review Service: FastAPI
    3) Merchant:
        1> Merchant Service: Laravel
        2> Vehicle & Travel Service: Laravel
    4) Vehicle Booking Service: Django
    5) Admin: Django
    6) Swagger Docs Service: Express
    7) Main Proxy Server: Nginx
    
*) FrontEnd Framework for all Client Application:
    1) User Application: NextJS, SCSS
    2) Merchant Application: Flutter
    3) Admin Application: ReactJS

    
*) CDN (Content Delivery Network for Client Application):
    -> Amazon CloudFront to speed up the load time of client application
    

*) Git Branches:
    1. development:
        -> development phase
    2. staging:
        -> merge to staging brach so that developer can see the preview deployment of the application deployed on cloud service.
    3. main:
        -> merge to main branch so that end user can access the application, Also we can called it as production branch.
        

Django error format:
{
  "detail": "Invalid input.",
  "errors": {
    "field_name": ["Error message 1.", "Error message 2."],
    "another_field": ["Another error message."]
  }
}

Laravel Error format:
{
    "message": "The given data was invalid.",
    "errors": {
        "field_name": [
            "Error message 1.",
            "Error message 2."
        ],
        "another_field": [
            "Another error message."
        ]
    }
}
