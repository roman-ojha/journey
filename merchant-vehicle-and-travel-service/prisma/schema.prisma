// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MERCHANT_V_AND_T_SERVICE_DATABASE_URL")
}

enum VehicleModels {
  SUPER_DELUX_BUS // 31
  HIASE // 15
}

model VehicleModel {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  model       VehicleModels
  no_of_seats Int
  Vehicles    Vehicle[]
}

model VehicleImage {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  image      String
  Vehicles   Vehicle @relation(fields: [vehicle_id], references: [id])
  vehicle_id String  @unique @db.ObjectId
}

model VehicleSeat {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  Vehicle    Vehicle @relation(fields: [vehicle_id], references: [id])
  vehicle_id String  @unique @db.ObjectId
}

model Vehicle {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  plate_no     String
  VehicleModel VehicleModel   @relation(fields: [model], references: [id])
  model        String         @unique @db.ObjectId
  Images       VehicleImage[]
  VehicleSeats VehicleSeat[]
}

model Place {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  TravelsFrom Travel[] @relation("FromPlace")
  TravelsTo   Travel[] @relation("ToPlace")
}

model Travel {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  fromPlace Place  @relation("FromPlace", fields: [from], references: [id])
  from      String @unique @db.ObjectId
  toPlace   Place  @relation("ToPlace", fields: [to], references: [id])
  to        String @unique @db.ObjectId
}
