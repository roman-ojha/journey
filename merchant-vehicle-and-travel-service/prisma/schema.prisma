// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MERCHANT_V_AND_T_SERVICE_DATABASE_URL")
}

enum VehicleModels {
  SUPER_DELUX_BUS // 31
  HIASE // 15
}

model VehicleModel {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        VehicleModels @unique
  no_of_seats Int
  Vehicles    Vehicle[]
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  seats       VehicleSeat[]
}

model VehicleImage {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  image      String
  Vehicles   Vehicle  @relation(fields: [vehicle_id], references: [id])
  vehicle_id String   @unique @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model VehicleSeat {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  vehicle_model    VehicleModel @relation(fields: [vehicle_model_id], references: [id])
  vehicle_model_id String       @unique @db.ObjectId
  created_at       DateTime     @default(now())
  updated_at       DateTime     @updatedAt
}

model Vehicle {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  plate_no    String
  merchant_id Int
  model       VehicleModel   @relation(fields: [model_id], references: [id])
  model_id    String         @unique @db.ObjectId
  images      VehicleImage[]
  Travel      Travel[]
  created_at  DateTime       @default(now())
  updated_at  DateTime       @updatedAt
}

model District {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String   @unique
  places     Place[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Place {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  district    District @relation(fields: [district_id], references: [id])
  district_id String   @db.ObjectId
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  // is_active Boolean @default(true)
  travel_from Travel[] @relation("FromPlace")
  travel_to   Travel[] @relation("ToPlace")
}

model Travel {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  from_place   Place    @relation("FromPlace", fields: [from], references: [id])
  from         String   @unique @db.ObjectId
  to_place     Place    @relation("ToPlace", fields: [to], references: [id])
  to           String   @unique @db.ObjectId
  is_active    Boolean  @default(true)
  departure_at DateTime // Store UTC Time
  route        String // Might have to create another Model
  driver_no    BigInt // Might have to create Driver Model
  // description
  vehicle      Vehicle  @relation(fields: [vehicle_id], references: [id])
  vehicle_id   String   @unique @db.ObjectId
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}
