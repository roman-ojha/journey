// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MERCHANT_V_AND_T_SERVICE_DATABASE_URL")
}

enum VehicleModels {
  SUPER_DELUX_BUS // 31
  HIASE // 15
}

model VehicleModel {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        VehicleModels @unique
  no_of_seats Int
  Vehicles    Vehicle[]
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
}

model VehicleImage {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  image      String
  Vehicles   Vehicle  @relation(fields: [vehicle_id], references: [id])
  vehicle_id String   @unique @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model VehicleSeat {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  Vehicle    Vehicle  @relation(fields: [vehicle_id], references: [id])
  vehicle_id String   @unique @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Vehicle {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  plate_no     String
  merchant_id  Int
  Model        VehicleModel   @relation(fields: [model_id], references: [id])
  model_id     String         @unique @db.ObjectId
  Images       VehicleImage[]
  VehicleSeats VehicleSeat[]
  Travel       Travel[]
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
}

model Place {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  TravelsFrom Travel[] @relation("FromPlace")
  TravelsTo   Travel[] @relation("ToPlace")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Travel {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  fromPlace   Place    @relation("FromPlace", fields: [from], references: [id])
  from        String   @unique @db.ObjectId
  toPlace     Place    @relation("ToPlace", fields: [to], references: [id])
  to          String   @unique @db.ObjectId
  is_active   Boolean
  dipature_at DateTime
  route       String // Might have to create another Model
  driver_no   BigInt // Might have to create Driver Model
  Vehicle     Vehicle  @relation(fields: [vehicle_id], references: [id])
  vehicle_id  String   @unique @db.ObjectId
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}
