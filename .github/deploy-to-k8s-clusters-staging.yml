name: (Staging) Deploy Microservices Into Kubernetes Clusters
on:
  workflow_run:
    workflows:
      ["(Staging) Build and Push Microservice Images on Docker Registries"]
    types:
      - completed
# env:
#   APPLY_K8S_MANIFESTS_COMMAND: kubectl apply -f ./manifests & kubectl delete pods --all -n default
jobs:
  deploy-to-gke:
    name: Deploy Microservices to Google Kubernetes Engine(GKE)
    runs-on: ubuntu-latest
    # needs: build-push-docker-images
    env:
      GCP_PROJECT_ID: roman-personal-398809
      GKE_CLUSTER_NAME: autopilot-cluster-1
      GKE_CLUSTER_ZONE: asia-south1
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Auth Google Cloud SDK
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_CREDENTIALS }}"
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure kubectl
        run: |
          gcloud components install gke-gcloud-auth-plugin
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER_NAME }} --region=${{ env.GKE_CLUSTER_ZONE }}

      - name: Apply Kubernetes Manifests to GKE
        run: |
          kubectl apply -f ./manifests
          kubectl config set-context --current --namespace=journey
          kubectl delete pods --all -n journey

  # deploy-to-eks:
  #   name: Deploy Microservices to AWS EKS Nodes
  #   runs-on: ubuntu-latest
  #   env:
  #     EKS_CLUSTER_NAME: journey
  #     EKS_CLUSTER_REGION: ap-south-1
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.EKS_CLUSTER_REGION }}

  #     - name: Install kubectl
  #       uses: azure/setup-kubectl@v3
  #       with:
  #         version: "latest"
  #       id: install

  #     - name: Update kubectl config
  #       run: |
  #         aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}

  #     - name: Debuging
  #       run: |
  #         aws sts get-caller-identity
  #         kubectl config get-contexts

  #     - name: Apply Kubernetes Manifests to EKS
  #       run: |
  #         kubectl apply -f ./manifests/namespace.yml
  #         kubectl config set-context --current --namespace=journey
  #         kubectl delete pods --all -n default
