name: Deploy Microservices Into Kubernetes Clusters
# on:
#   workflow_run:
#     workflows: ["Build and Push Microservice Images on Docker Registries"]
#     types:
#       - completed
on:
  push:
    branches:
      - "main"
# env:
#   APPLY_K8S_MANIFESTS_COMMAND: kubectl apply -f ./manifests & kubectl delete pods --all -n default
jobs:
  # deploy-to-gke:
  #   name: Deploy Microservices to Google Kubernetes Engine(GKE)
  #   runs-on: ubuntu-latest
  #   # needs: build-push-docker-images
  #   env:
  #     GCP_PROJECT_ID: roman-personal-398809
  #     GKE_CLUSTER_NAME: autopilot-cluster-1
  #     GKE_CLUSTER_ZONE: asia-south1
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Auth Google Cloud SDK
  #       uses: "google-github-actions/auth@v1"
  #       with:
  #         credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_CREDENTIALS }}"
  #         project_id: ${{ env.GCP_PROJECT_ID }}

  #     - name: Set up Google Cloud CLI
  #       uses: google-github-actions/setup-gcloud@v1

  #     - name: Configure kubectl
  #       run: |
  #         gcloud components install gke-gcloud-auth-plugin
  #         gcloud container clusters get-credentials ${{ env.GKE_CLUSTER_NAME }} --region=${{ env.GKE_CLUSTER_ZONE }}

  #     - name: Apply Kubernetes Manifests to GKE
  #       run: |
  #         kubectl apply -f ./manifests
  #         kubectl delete pods --all -n default

  deploy-to-eks:
    name: Deploy Microservices to AWS EKS Nodes
    runs-on: ubuntu-latest
    env:
      EKS_CLUSTER_NAME: journey
      EKS_CLUSTER_REGION: ap-south-1
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.24.0"
        id: install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.EKS_CLUSTER_REGION }}

      # - name: Add Credential file under "~/.aws" Folder
      #   run: |
      #     mkdir ~/.aws
      #     echo -e "[default]\naws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\naws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials

      - name: Update kubectl config
        run: |
          aws eks --region ${{ env.EKS_CLUSTER_REGION }} update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}
          cat $HOME/.kube/config

      - name: Check AWS CLI login status
        run: aws sts get-caller-identity

      - name: Apply Kubernetes Manifests to EKS
        run: |
          kubectl apply -f ./manifests
